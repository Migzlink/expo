{"version":3,"file":"TabOptions.js","sourceRoot":"","sources":["../../../src/ui/NativeBottomTabs/TabOptions.tsx"],"names":[],"mappings":"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","sourcesContent":["import type { JSXElementConstructor, PropsWithChildren, ReactElement, ReactNode } from 'react';\nimport React, { isValidElement } from 'react';\n\nimport type { NativeTabOptions } from './NativeTabsView';\nimport { Badge, Icon, Title } from './NavigatorElements';\n\nexport type TabProps = PropsWithChildren<{\n  name: string;\n  options?: NativeTabOptions;\n}>;\n\nexport function Tab(props: TabProps) {\n  return null;\n}\n\nexport function convertTabPropsToOptions({ options, children }: TabProps) {\n  const allowedChildren = filterAllowedChildrenElements(children, [Badge, Title, Icon]);\n  return allowedChildren.reduce<NativeTabOptions>(\n    (acc, child) => {\n      if (isChildOfType(child, Badge)) {\n        acc.badgeValue = child.props.value;\n      } else if (isChildOfType(child, Title)) {\n        acc.title = child.props.children;\n        if (child.props.style) {\n          acc.tabBarItemTitleFontFamily = child.props.style.fontFamily;\n          acc.tabBarItemTitleFontSize = child.props.style.fontSize;\n          acc.tabBarItemTitleFontWeight = child.props.style.fontWeight;\n          acc.tabBarItemTitleFontStyle = child.props.style.fontStyle;\n          acc.tabBarItemTitleFontColor = child.props.style.fontColor;\n        }\n      } else if (isChildOfType(child, Icon)) {\n        if ('sfSymbolName' in child.props) {\n          acc.iconSFSymbolName = child.props.sfSymbolName;\n        } else if ('children' in child.props) {\n          // TODO: Once there is support for custom icons, we can handle this case\n        }\n      }\n      return acc;\n    },\n    { ...options }\n  );\n}\n\nexport function isTab(\n  child: ReactNode,\n  contextKey?: string\n): child is ReactElement<TabProps & { name: string }> {\n  if (isValidElement(child) && child && child.type === Tab) {\n    if (\n      typeof child.props === 'object' &&\n      child.props &&\n      'name' in child.props &&\n      !child.props.name\n    ) {\n      throw new Error(\n        `<Screen /> component in \\`default export\\` at \\`app${contextKey}/_layout\\` must have a \\`name\\` prop when used as a child of a Layout Route.`\n      );\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (\n        ['children', 'component', 'getComponent'].some(\n          (key) => child.props && typeof child.props === 'object' && key in child.props\n        )\n      ) {\n        throw new Error(\n          `<Screen /> component in \\`default export\\` at \\`app${contextKey}/_layout\\` must not have a \\`children\\`, \\`component\\`, or \\`getComponent\\` prop when used as a child of a Layout Route`\n        );\n      }\n    }\n\n    return true;\n  }\n\n  return false;\n}\n\nfunction filterAllowedChildrenElements<Components extends JSXElementConstructor<any>[]>(\n  children: ReactNode | ReactNode[],\n  components: Components\n): React.ReactElement<React.ComponentProps<Components[number]>, Components[number]>[] {\n  return React.Children.toArray(children).filter(\n    (\n      child\n    ): child is React.ReactElement<React.ComponentProps<Components[number]>, Components[number]> =>\n      React.isValidElement(child) && components.includes(child.type as (props: any) => ReactNode)\n  );\n}\n\nfunction isChildOfType<T extends JSXElementConstructor<any>>(\n  child: ReactNode,\n  type: T\n): child is React.ReactElement<React.ComponentProps<T>, T> {\n  return React.isValidElement(child) && child.type === type;\n}\n"]}